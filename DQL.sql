-- CREATING RANDOM DATA
CREATE DATABASE ronitdb;
USE ronitdb;

CREATE TABLE student (
id INT PRIMARY KEY,
name VARCHAR(255)
);

INSERT INTO student VALUES (1, 'Ronit');

-- SELECT 
SELECT * FROM student;

-- DELETING DATABASE
DROP DATABASE ronitdb;

USE ORG;

-- WHERE 
SELECT WORKER_ID, FIRST_NAME, SALARY FROM Worker WHERE SALARY >= 20000;

-- SALARY (10000, 20000)
SELECT WORKER_ID, FIRST_NAME, LAST_NAME, SALARY FROM Worker WHERE SALARY BETWEEN 10000 AND 20000;

-- HR, ADMIN
SELECT WORKER_ID, FIRST_NAME, DEPARTMENT FROM Worker WHERE DEPARTMENT = 'HR' OR DEPARTMENT = 'Admin';
SELECT WORKER_ID, FIRST_NAME, DEPARTMENT FROM Worker WHERE DEPARTMENT IN ('HR', 'Admin');
SELECT WORKER_ID, FIRST_NAME, DEPARTMENT FROM Worker WHERE DEPARTMENT NOT IN ('Account');

-- DUAL TABLE FUNCTIONS
SELECT 14 / 3;
SELECT now();
SELECT ucase('Ronit');

-- NOT
SELECT FIRST_NAME FROM Worker WHERE DEPARTMENT IS NULL;

-- WILDCARD
-- LIKE
SELECT * FROM Worker WHERE FIRST_NAME LIKE 'R%';

-- SORTING USING ORDER BY
SELECT * FROM Worker ORDER BY SALARY ASC;
SELECT * FROM Worker ORDER BY SALARY DESC;

-- DISTINCT
SELECT DISTINCT DEPARTMENT FROM Worker;

-- COUNT
SELECT COUNT(DISTINCT DEPARTMENT) FROM Worker;

-- GROUP BY
SELECT DEPARTMENT, COUNT(DEPARTMENT) FROM Worker GROUP BY DEPARTMENT;

-- AVG, MIN, MAX, SUM SALARY PER DEPARTMENT
SELECT DEPARTMENT, AVG(SALARY) FROM Worker GROUP BY DEPARTMENT;
SELECT DEPARTMENT, MIN(SALARY) FROM Worker GROUP BY DEPARTMENT;
SELECT DEPARTMENT, MAX(SALARY) FROM Worker GROUP BY DEPARTMENT;
SELECT DEPARTMENT, SUM(SALARY) FROM Worker GROUP BY DEPARTMENT;

-- HAVING
SELECT DEPARTMENT, COUNT(DEPARTMENT) FROM Worker GROUP BY DEPARTMENT HAVING COUNT(DEPARTMENT) > 2;